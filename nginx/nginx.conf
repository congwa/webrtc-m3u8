# 设置运行nginx的用户
user www-data;
# 自动设置工作进程数量为CPU核心数
worker_processes auto;
# 设置pid文件路径
pid /run/nginx.pid;
# 包含其他模块配置
include /etc/nginx/modules-enabled/*.conf;

# 事件模块配置
events {
    # 每个工作进程的最大连接数
    worker_connections 1024;
}

# RTMP 服务器配置
rtmp {
    server {
        # RTMP默认端口
        listen 1935;
        # RTMP数据块大小
        chunk_size 4096;

        # 直播应用配置
        application live {
            # 启用实时模式
            live on;
            # 启用HLS
            hls on;
            # HLS文件将存储在这个目录
            hls_path /var/www/html/hls;
            # HLS片段时长（秒）
            hls_fragment 4s;
            # HLS播放列表长度
            hls_playlist_length 12s;
            
            # 访问控制
            allow publish all;  # 允许所有IP推流
            allow play all;     # 允许所有IP播放
            
            # HLS多码率配置
            hls_variant _low BANDWIDTH=800000;    # 低码率
            hls_variant _mid BANDWIDTH=1200000;   # 中码率
            hls_variant _high BANDWIDTH=2000000;  # 高码率
        }
    }
}

# HTTP服务器配置
http {
    # 包含mime类型定义
    include /etc/nginx/mime.types;
    # 默认mime类型
    default_type application/octet-stream;

    # 定义日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';

    # 访问日志配置
    access_log /var/log/nginx/access.log main;
    # 错误日志配置
    error_log /var/log/nginx/error.log warn;

    # 基础优化配置
    sendfile on;              # 启用sendfile系统调用
    tcp_nopush on;           # 启用TCP NOPUSH选项
    tcp_nodelay on;          # 启用TCP NODELAY选项
    keepalive_timeout 65;    # 保持连接超时时间
    types_hash_max_size 2048;# 类型哈希表大小

    # CORS跨域配置
    map $http_origin $cors_header {
        default "*";  # 允许所有来源访问
    }

    # HTTP服务器配置
    server {
        listen 80;                # 监听80端口
        server_name localhost;    # 服务器名称
        root /var/www/html;      # 网站根目录
        index index.html;        # 默认索引文件

        # HLS流媒体配置
        location /hls {
            # HLS相关文件类型
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /var/www/html;
            # 禁用缓存
            add_header Cache-Control no-cache;
            # CORS头部设置
            add_header Access-Control-Allow-Origin $cors_header;
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            
            # OPTIONS请求处理（预检请求）
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_header;
                add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
                add_header Access-Control-Allow-Headers '*';
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # 静态文件服务配置
        location / {
            try_files $uri $uri/ =404;  # 文件不存在返回404
            
            # CORS配置
            add_header Access-Control-Allow-Origin $cors_header;
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            
            # 静态资源缓存配置
            location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires 30d;  # 静态文件缓存30天
                add_header Cache-Control "public, no-transform";
            }
            
            # HTML文件缓存配置
            location ~* \.html$ {
                expires -1;  # 禁用缓存
                add_header Cache-Control "no-store, no-cache, must-revalidate";
            }
        }

        # WebRTC服务反向代理配置
        location /webrtc {
            proxy_pass http://localhost:3000;  # 转发到Node服务
            proxy_http_version 1.1;
            # WebSocket支持
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Node HLS转发配置
        location /node-hls/ {
            proxy_pass http://localhost:3000/node-hls/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            
            # HLS相关文件类型
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            # 禁用缓存
            add_header Cache-Control no-cache;
            # CORS设置
            add_header Access-Control-Allow-Origin $cors_header;
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
        }
    }
} 